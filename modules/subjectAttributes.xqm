module namespace аттрибутыДисциплин = 'аттрибутыДисциплин';

declare namespace a = 'urn:schemas-microsoft-com:xml-diffgram-v1';
declare namespace b = 'http://tempuri.org/dsMMISDB.xsd';

declare 
  %public
function 
  аттрибутыДисциплин:формыКонтроляПоСеместрам3PP(
    $план as element()*, $кодДисциплины as xs:string
  ) as item()*
{
    let $дисциплина :=  $план/b:ПланыСтроки[ @ДисциплинаКод = $кодДисциплины  ]
    
     let $видПлана := 
      if( $план/b:ПланыНовыеЧасы[ @КодОбъекта = $дисциплина/@Код/data() ][ @Сессия/data() != "0" ] )
      then( "1" ) (: виды работа по сессиям :)
      else( "0" ) (: виды работ оп семестрам :)
    
    let $видыРаботПоДисциплине := 
      $план/b:ПланыНовыеЧасы[ @КодОбъекта = $дисциплина/@Код/data() ]
      [ if( $видПлана = "1" )then( @Сессия/data() != "0" )else( true() ) ]
   
    let $формыКонтроля := 
      $план/b:СправочникВидыРабот[ @КодТипРабот = '7' ] (: 7 - контроль :)
    let $result := 
      for $i in $видыРаботПоДисциплине[ @КодВидаРаботы = $формыКонтроля/@Код/data() ]
      let $семестр := 
        if( $i[ @Сессия/data() != "0" ] )
        then( ( $i/@Курс - 1 ) * 2 +  $i/@Сессия - 1 )
        else( ( $i/@Курс - 1 ) * 2 +  $i/@Семестр )
        
      let $формаКонтроля :=
        $семестр || ":" || $формыКонтроля[ @Код = $i/@КодВидаРаботы ]/@Название/data()
      
      order by $семестр
      return
       [ $семестр, $формаКонтроля ]
    return
      (
        string-join( distinct-values( $result?1 ), ','),
        string-join( $result?2, ',')
      )
};

declare
  %public
function аттрибутыДисциплин:видыРаботПоДисциплине( $план as element()*, $кодДисциплины as xs:string )
  as element( видРабот )*
{
  let $дисциплина := $план/b:ПланыСтроки[ @ДисциплинаКод = $кодДисциплины ]
  let $p := $план
    /b:ПланыНовыеЧасы[ @КодОбъекта = $дисциплина/@Код/data() ]
  let $результат :=
    for $i in  $p
    let $семестр := 
      xs:string( $i/attribute::Курс * 2 - 2 + $i/attribute::Семестр )
    let $видРабот :=
      $план/b:СправочникВидыРабот[ @Код/data() = $i/attribute::КодВидаРаботы/data() ]/@Аббревиатура/data()
    where $i/attribute::КодТипаЧасов/data() = "1"
    order by number( $i/attribute::КодВидаРаботы/data() )
    order by $семестр
    return
        <видРабот>
          <семестр>{ $семестр }</семестр>
          <кодВидаРабот>{ $i/attribute::КодВидаРаботы/data() }</кодВидаРабот>
          <названиеВидаРабота>{ $видРабот}</названиеВидаРабота>
          <часы>{ $i/attribute::Количество/data() }</часы>
        </видРабот>
   return
      $результат
};